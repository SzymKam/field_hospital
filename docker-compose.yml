version: "3"
services:
  web:
    container_name: web_field_hospital
    build:
      context: .
      dockerfile: web.Dockerfile
    command: poetry run gunicorn core.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    volumes:
      - static_volume:/src/staticfiles
    depends_on:
      db:
        condition: service_healthy
    networks:
      - network_no_internet
      - network_internet

  db:
    container_name: db_field_hospital
    image: postgres:16.0
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${USER}"]
      interval: 5s
      timeout: 30s
      retries: 6
    networks:
      - network_no_internet

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: static_field_hospital
    volumes:
      - static_volume:/staticfiles
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - network_no_internet
      - network_internet

volumes:
  pg_data:
  static_volume:

networks:
  network_internet:
    driver: bridge
  network_no_internet:
    driver: bridge
    internal: true
